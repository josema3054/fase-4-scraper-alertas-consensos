"""
Script de prueba para verificar que la opci√≥n de reiniciar cache funciona
"""

import os
import sys
from pathlib import Path

def verificar_cache_limpio():
    """Verifica si el cache est√° efectivamente limpio"""
    print("üß™ Verificando estado del cache...")
    
    base_dir = Path(".")
    
    # Contar archivos de cache
    pycache_dirs = list(base_dir.rglob("__pycache__"))
    pyc_files = list(base_dir.rglob("*.pyc"))
    
    print(f"üìÅ Directorios __pycache__ encontrados: {len(pycache_dirs)}")
    print(f"üêç Archivos .pyc encontrados: {len(pyc_files)}")
    
    # Verificar m√≥dulos en memoria
    project_modules = [name for name in sys.modules.keys() 
                      if any(pattern in name for pattern in ['src.', 'config.'])]
    
    print(f"üì¶ M√≥dulos del proyecto en memoria: {len(project_modules)}")
    
    if project_modules:
        print("   M√≥dulos encontrados:")
        for module in project_modules[:5]:
            print(f"      ‚Ä¢ {module}")
        if len(project_modules) > 5:
            print(f"      ... y {len(project_modules) - 5} m√°s")
    
    # Verificar si el cache est√° limpio
    cache_limpio = len(pycache_dirs) == 0 and len(pyc_files) == 0
    
    if cache_limpio:
        print("‚úÖ Cache est√° limpio")
    else:
        print("‚ö†Ô∏è  Cache contiene archivos")
    
    return cache_limpio

def generar_cache():
    """Genera algo de cache importando m√≥dulos"""
    print("üîÑ Generando cache importando m√≥dulos...")
    
    try:
        # Importar m√≥dulos del proyecto para generar cache
        sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))
        
        from config.settings import Settings
        print("   ‚úÖ Importado: config.settings")
        
        from src.scraper.mlb_scraper import MLBScraper
        print("   ‚úÖ Importado: src.scraper.mlb_scraper")
        
        from src.utils.logger import Logger
        print("   ‚úÖ Importado: src.utils.logger")
        
        print("üì¶ Cache generado exitosamente")
        
    except ImportError as e:
        print(f"‚ö†Ô∏è  Error al importar m√≥dulos: {e}")

def main():
    print("=" * 60)
    print("   PRUEBA DE FUNCIONALIDAD - REINICIAR CACHE")
    print("=" * 60)
    print()
    
    # Verificar estado inicial
    print("1Ô∏è‚É£ Estado inicial del cache:")
    cache_inicial_limpio = verificar_cache_limpio()
    print()
    
    # Generar cache si est√° limpio
    if cache_inicial_limpio:
        print("2Ô∏è‚É£ Generando cache para la prueba:")
        generar_cache()
        print()
        
        print("3Ô∏è‚É£ Estado despu√©s de generar cache:")
        verificar_cache_limpio()
        print()
    
    print("üéØ Instrucciones para continuar:")
    print("   1. Ejecuta: ejecutar_software.bat")
    print("   2. Selecciona opci√≥n 5 (Reiniciar cache)")
    print("   3. Vuelve a ejecutar este script para verificar")
    print()
    print("üí° O ejecuta directamente: python reiniciar_cache.py")
    print()

if __name__ == "__main__":
    main()
